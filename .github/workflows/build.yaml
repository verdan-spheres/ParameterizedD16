name: build workf_flow

on: 
 workflow_call:
  inputs:
   version:
    required: true
    type: string 
  secrets:       #same level with input value for passig the sec
    SONAR_TOKEN:
      required: true
    DOCKERHUB_USERNAME:
      required: true
    DOCKERHUB_TOKEN:
      required: true
    
    
jobs:
  build:
    name: Build Laravel App
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
    
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{inputs.version}}

      - name: Install dependencies
        run: |
          composer install
      
      - name: Cache the Vendor
        uses: actions/cache@v4.0.2
        with:
          key: ${{ github.sha }}-php-vendor-cache
          path: ./vendor

      - name: Create .env
        run: |
          cp .env.ci .env
          cp .env.ci .env.testing

      - name: Generate the key
        run: |
          php artisan key:generate

      - name: Check out before sacnner
        uses: actions/checkout@v4
        with:
            # Disabling shallow clone is recommended for improving relevancy of reporting
          fetch-depth: 0

      - name: SonarCloud Scan
        uses: sonarsource/sonarcloud-github-action@v2.1.0
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: Run Trivy vulnerability scanner in fs mode
        uses: aquasecurity/trivy-action@0.20.0
        with:
            scan-type: 'fs'
            scan-ref: '.'
            trivy-config: trivy.yaml

      - name: dockernize the application
        run: |
          docker build -t reusable .

      - name: Generate tarball from image
        run: |
            docker pull reusable
            docker save -o vuln-image.tar <your-docker-image>
    
      - name: Run Trivy vulnerability scanner in tarball mode
        uses: aquasecurity/trivy-action@0.20.0
        with:
            input: /github/workspace/vuln-image.tar
            severity: 'CRITICAL,HIGH'
     
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{secrets.DOCKERHUB_USERNAME}}
          password: ${{secrets.DOCKERHUB_TOKEN}}
     
      - name: Tag image
        run: docker tag reusable ${{ secrets.DOCKERHUB_USERNAME }}/reusable
     
      - name: Push Docker image
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/reusable
       
       


     
        